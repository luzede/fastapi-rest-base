"""initial migration

Revision ID: 9fa66fabf04f
Revises:
Create Date: 2024-07-12 11:51:14.050759

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "9fa66fabf04f"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "dogs",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("age", sa.Integer(), nullable=False),
        sa.Column(
            "type",
            sa.Enum(
                "QUICK",
                "LAZY",
                "CLEVER",
                "OLD",
                "YOUNG",
                "HUNGRY",
                "SLEEPY",
                "ANGRY",
                "HAPPY",
                "SAD",
                "SLOW",
                "SNEAKY",
                name="type",
            ),
            nullable=False,
        ),
        sa.Column(
            "color",
            sa.Enum("RED", "GREEN", "BLUE", "BLACK", "WHITE", name="color"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "examples",
        sa.Column("uuid", sa.Uuid(), nullable=False),
        sa.Column("integer", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("float", sa.Float(), nullable=False),
        sa.Column("string", sa.String(), nullable=False),
        sa.Column("datetime", sa.DateTime(), nullable=False),
        sa.Column("time", sa.Time(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("timedelta", sa.Interval(), nullable=False),
        sa.PrimaryKeyConstraint("uuid"),
    )
    op.create_table(
        "foxes",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("age", sa.Integer(), nullable=False),
        sa.Column(
            "type",
            sa.Enum(
                "QUICK",
                "LAZY",
                "CLEVER",
                "OLD",
                "YOUNG",
                "HUNGRY",
                "SLEEPY",
                "ANGRY",
                "HAPPY",
                "SAD",
                "SLOW",
                "SNEAKY",
                name="type",
            ),
            nullable=False,
        ),
        sa.Column(
            "color",
            sa.Enum("RED", "GREEN", "BLUE", "BLACK", "WHITE", name="color"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "fox_dog_links",
        sa.Column("fox_id", sa.Integer(), nullable=False),
        sa.Column("dog_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dog_id"], ["dogs.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["fox_id"], ["foxes.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("fox_id", "dog_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("fox_dog_links")
    op.drop_table("foxes")
    op.drop_table("examples")
    op.drop_table("dogs")
    # ### end Alembic commands ###

    # Drop the ENUM types, this is necessary because the ENUM types are not dropped automatically
    # and next time you try to run the migration and the Enum types already exist, it will error
    op.execute("DROP TYPE IF EXISTS type;")
    op.execute("DROP TYPE IF EXISTS color;")
